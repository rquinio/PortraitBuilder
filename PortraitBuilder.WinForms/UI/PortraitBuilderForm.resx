<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCAgAAAAAAAAAAAAAAAAAAAAALBASFW4dJy2kIi430CQv
        OO4lMTr9JDE6/CEtNu4fKjPRHCQrpRATFW4AAAApAAAAAAAAAAASEhMAAgICAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAAAAAAAAAAAAAQAAMxcdIq4sPEjhM0hV9jtT
        Yv9BW2z/RGBy/0didP9GYHP/QFtt/zlRYv82S1r/M0ZT9yo3QuMVGh6uAAAANQAAAAAAAAAABwcHAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAAAAAAAAAABhAUFo8nNkL5OlNj/kZj
        dP9UdIX/VXeK/09vgP9RcYP/V3iL/16Clf9YfJD/VHOH/09sfv9KZHX/Q1tr/ztRX/4oN0H3ERQVmgAA
        AAkAAAAACwsMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkJCQAAAAAAAAAAAA0ODx8XHiTSM0hX/0Rg
        c/9OboP/UnOF/zVLVv8PFhr/DBEV/wwRFf8MERX/ERgd/y09Rv9HYnH/XH2Q/1p7jf9ScIP/SWR2/z1V
        Zf80R1X/GyMpzQkICCsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUAAAAAAAAAAAAMDQ42Hycv7DZN
        X/9CX3H/RmR3/zBFUP8PFRr/DBEV/xAWG/8PFhr/DxYa/xAWGv8PFRn/DhMX/wwQFP8TGh//N0pV/1d0
        hv9dfpH/UnCD/0Zfcf82Slr/ICs02g0PEDkAAAAACwsNAAAAAAAAAAAAAAAAACAoLQAAAAAACQkINyAr
        NOI4TV7/Qlxw/0BZav8ZIyr/CxAU/xAVGv8PFhv/EBYb/xAWG/8QFxv/EBYb/w8WGv8QFxv/ERcc/xAW
        Gv8MEBT/GyYs/z1SXv9Vc4T/WnqO/0ZhdP83TFv/ISwz2ggHCCsAAAAABwcHAAAAAAAJCQkAAAAAAAAA
        AB0gKzLDNUtb/0Fabf9KZnv/TWt//zVJVf8SGR//DxUZ/xAXHP8RGBz/EBYb/xAWG/8RFxz/EBcc/xAW
        G/8RFxz/ERcb/xAXG/8PFRn/DxQY/yItNf87UF3/SGN0/0Zgcv83TFv/HCQrzQAAAAkAAAAAAgICAAAA
        AAAAAAAFFR0igis+TP85U2b/R2J4/05sg/9cfZL/X4KY/01pef8ZIij/EBUa/xEXHP8QFxz/EBcc/xAX
        HP8QFxz/EBcc/xAXG/8RFxv/ERcb/xEXHP8QFxv/DREV/yY0PP9KZXb/Tmp9/0VecP80R1b/EBMVmgAA
        AAASEhMAAAAAABAUFywjLznwOlFj/0Fccf9LZn3/UW+F/1l6j/9cfpX/ZIif/2SIm/8iLzf/DxUa/xEX
        HP8RFxz/ERcc/xAWG/8RFxz/EBcb/xIYHf8RGBz/ERcb/xokKv9MZnX/aImd/15+k/9TcIX/SmR3/z1U
        Zf8oN0H3AAAANQAAAAAFAgEEFR0iiC9DU/9BW2//RmN5/01qgf9Uc4n/VXWM/1h5kP9egZj/Zo6j/3CY
        rf8mNDz/DxUZ/xEYHf8QFxz/ERcc/w8WG/8QFhv/ERgc/xEXG/8lMDf/Z42f/2qOov9ef5X/V3aN/1V0
        if9Pa3//QFlr/zZKWf4WHCCuAAAAABAUFxAdKDDtOVJm/0Nfdf9KaoH/S22G/1R1jf9Scor/V3aO/1h5
        kf9ih57/cZmu/0tmdP8MERX/Ehkd/xIYHf8RGBz/Ehgc/xIYHf8PFhr/Hyow/2CClP9liZ7/YYKX/1t6
        kf9Wdoz/VXSK/1Fvg/9KZHj/QFZn/yk2QOMAAAApDQ8RRik7R/89V2v/R2V7/0logf9NcYn/U3WN/1Jz
        jP9UdY7/W36V/2aMo/9CWmf/Hiow/xEXG/8SGR3/Ehkd/xIZHf8SGR3/ERgd/w4TF/86Tln/bJGk/2OF
        mv9aepD/WniO/1l4j/9ZeI7/U3CG/01off9DW23/M0VS9xATFW4SFRiRM0pb/z1YbP9GZXz/T2+G/01u
        if9Nb4j/UXOL/1h5kf9li6P/R2Nz/xEXHP8QFxv/Ehkd/xEZHv8RFxz/ERgc/xEXHP8SGB3/DxUZ/zJD
        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
        AAfwAAAP+AAAH/wAAD/+AAB//4AB///wD/8=
</value>
  </data>
</root>